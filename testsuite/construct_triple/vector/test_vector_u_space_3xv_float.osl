shader
test_vector_u_space_3xv_float (string vectorspace = "--param vectorspace must_be_provided", output color Cout = 0)
{
    // Quantize val to avoid disagreements between scalar & SIMD as it approaches 0
    float valr = 1.0/(2*float(64-int(64*u))/64);
    float valg = 1.0/(3*float(64-int(64*u))/64);
    float valb = 1.0/(4*float(64-int(64*u))/64);
    float val2r = v;
    float val2g = v/2;
    float val2b = v/3;

    vector c1 = vector(vectorspace, valr, valg, valb);
    if (int(P[0]*64)%2==0) {
        c1 = vector(vectorspace, val2r, val2g, val2b);
    }
    
    Cout = c1;
}
