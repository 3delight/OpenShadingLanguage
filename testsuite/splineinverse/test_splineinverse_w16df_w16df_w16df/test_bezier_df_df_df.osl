shader test_bezier_df_df_df (
	//float X = 0.5,
	output float Fspline1 = 0, 
	output float DxFspline1 = 0)
{

   

   float fltknots[13];
 

   fltknots[ 0] =  1.0/12 * u;
   fltknots[ 1] =  2.0/12 * u;
   fltknots[ 2] =  3.0/12 * u;
   fltknots[ 3] =  4.0/12 * u;
   fltknots[ 4] =  5.0/12 * u;
   fltknots[ 5] =  6.0/12 * u;
   fltknots[ 6] =  7.0/12 * u;
   fltknots[ 7] =  8.0/12 * u;
   fltknots[ 8] =  9.0/12 * u;
   fltknots[ 9] =  10.0/12 * u;
   fltknots[10] =  11.0/12 * u;
   fltknots[11] =  11.5/12 * u;
   fltknots[12] =  12.0/12 * u;

if (P[0]>0.5){
  Fspline1   = splineinverse ("bezier", v, fltknots);
  //DxFspline1 = 100.0*Dx(Fspline1);
   DxFspline1 = Dx(Fspline1);
}


}
