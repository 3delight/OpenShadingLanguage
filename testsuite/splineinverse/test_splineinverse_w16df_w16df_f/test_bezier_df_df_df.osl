shader test_bezier_df_df_df (
	float X = 0.5,
	output float Fspline1 = 0, 
	output float DxFspline1 = 0)
{

//Non-batched: osl_spline_w16dfw16dfdf
//Batched: Couldn't find function osl_spline_w16dfw16dfw16df 	
// testshade -g 400 400 -t 1 --iters 1 --stats -o Fspline1 a.tif -o DxFspline1 b.tif test_bezier_df_df_df | grep osl
   

   float fltknots[13];
   
   fltknots[ 0] = (0.0/12.0)* u;
   fltknots[ 1] = (1.0/12.0)* u;
   fltknots[ 2] = (2.0/12.0)* u;
   fltknots[ 3] = (3.0/12.0)* u;
   fltknots[ 4] = (4.0/12.0)* u;
   fltknots[ 5] = (5.0/12.0)* u;
   fltknots[ 6] = (6.0/12.0)* u;
   fltknots[ 7] = (7.0/12.0)* u;
   fltknots[ 8] = (8.0/12.0)* u;
   fltknots[ 9] = (9.0/12.0)* u;
   fltknots[10] = (10.0/12.0)* u;
   fltknots[11] = (11.0/12.0)* u;
   fltknots[12] = (12.0/12.0)* u;

if(int(P[0]*1024)%2){

  Fspline1   = spline("bezier", v, fltknots);
  DxFspline1 = Dx(Fspline1);



}
