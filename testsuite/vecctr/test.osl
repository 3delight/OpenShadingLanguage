#include "../common/shaders/pretty.h"


shader
test ()
{
    {
        float a = 0.1, b = 0.2, c = 0.5;
        printf ("  point (%g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(point(a,b,c)));
        printf ("  vector (%g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(vector(a,b,c)));
        printf ("  normal (%g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(normal(a,b,c)));
    }

    {
        printf (" varying:\n");
        float a = u;
        float b = 1.0 + v;
        float c = 0.5;

        printf ("  point (%g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(point(a,b,c)));
        printf ("  vector (%g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(vector(a,b,c)));
        printf ("  normal (%g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(normal(a,b,c)));
    }

    { 
        float a = 1, b = 1, c = 0;
        printf ("\ntesting with spaces:\n");
        printf ("  point (\"shader\", %g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(point("shader",a,b,c)));
        printf ("  vector (\"shader\", %g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(vector("shader",a,b,c)));
        printf ("  normal (\"shader\", %g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(normal("shader",a,b,c)));
        printf ("  point (\"object\", %g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(point("object",a,b,c)));
        printf ("  vector (\"object\", %g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(vector("object",a,b,c)));
        printf ("  normal (\"object\", %g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(normal("object",a,b,c)));
        printf ("  point (\"myspace\", %g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(point("myspace",a,b,c)));
        printf ("  vector (\"myspace\", %g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(vector("myspace",a,b,c)));
        printf ("  normal (\"myspace\", %g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(normal("myspace",a,b,c)));
    }
    
    { 
        float a = u;
        float b = 1.0 + v;
        float c = 0.5;
        printf ("\ntesting varying triples with uniform spaces:\n");
        printf ("  point (\"shader\", %g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(point("shader",a,b,c)));
        printf ("  vector (\"shader\", %g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(vector("shader",a,b,c)));
        printf ("  normal (\"shader\", %g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(normal("shader",a,b,c)));
        printf ("  point (\"object\", %g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(point("object",a,b,c)));
        printf ("  vector (\"object\", %g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(vector("object",a,b,c)));
        printf ("  normal (\"object\", %g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(normal("object",a,b,c)));
        printf ("  point (\"myspace\", %g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(point("myspace",a,b,c)));
        printf ("  vector (\"myspace\", %g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(vector("myspace",a,b,c)));
        printf ("  normal (\"myspace\", %g, %g, %g) = %g\n",
                pretty(a), pretty(b), pretty(c), pretty(normal("myspace",a,b,c)));
    }    
    
    { 
        float a = 1, b = 1, c = 0;
        
        string space;
        if (P[0] < 0.25) {
            space = "shader";
        } else if (P[0] < 0.75) {
            space = "object";
        } else {
            space = "myspace";
        }  
        printf ("\ntesting with varying spaces:\n");
        printf ("  point (\"%s\", %g, %g, %g) = %g\n", space,
                pretty(a), pretty(b), pretty(c), pretty(point(space,a,b,c)));
        printf ("  vector (\"%s\", %g, %g, %g) = %g\n", space,
                pretty(a), pretty(b), pretty(c), pretty(vector(space,a,b,c)));
        printf ("  normal (\"%s\", %g, %g, %g) = %g\n", space,
                pretty(a), pretty(b), pretty(c), pretty(normal(space,a,b,c)));
    }        

    { 
        float a = u;
        float b = 1.0 + v;
        float c = 0.5;
        string space;
        if (P[0] < 0.25) {
            space = "shader";
        } else if (P[0] < 0.75) {
            space = "object";
        } else {
            space = "myspace";
        }  
        printf ("\ntesting varying triples with varying spaces:\n");
        printf ("  point (\"%s\", %g, %g, %g) = %g\n", space,
                pretty(a), pretty(b), pretty(c), pretty(point(space,a,b,c)));
        printf ("  vector (\"%s\", %g, %g, %g) = %g\n", space,
                pretty(a), pretty(b), pretty(c), pretty(vector(space,a,b,c)));
        printf ("  normal (\"%s\", %g, %g, %g) = %g\n", space,
                pretty(a), pretty(b), pretty(c), pretty(normal(space,a,b,c)));
    }        
}
